---
import BlogCard from "@/components/BlogCard.astro";
import Share from "@/components/Share.astro";
import config from "@/config/config.json";
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import similerItems from "@/lib/utils/similarItems";
import { humanize, markdownify, slugify } from "@/lib/utils/textConverter";
import { Image } from "@astrojs/image/components";
import {
  FaRegClock,
  FaRegFolder,
  FaRegUserCircle,
} from "react-icons/fa/index.js";

import { getLangFromUrl } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);

const textRelated = {
  "hu":"Kapcsolódó bejegyzések",
  "en":"Related posts",
  "es":"Publicaciones relacionadas",
  "de":"Ähnliche Beiträge",
  "it":"Post correlati",
  "fr":"Articles similaires",
  "ro":"Postări similare"
}

const { blog_folder } = config.settings;
const posts = await getSinglePage(blog_folder);
const { post } = Astro.props;
const similarPostUnfiltered = similerItems(post, posts, post.slug);
const similarPosts = similarPostUnfiltered.filter((post) => post.slug.startsWith(lang));
const { Content } = await post.render();
const { title, description, author, categories, image, date, tags, domain } = post.data;
---


<section class="section pt-7">
  <div class="container">
    <ar class="row justify-center">
      <article class="sm:col-11 md:col-9 lg:col-8">
<div class="!z-5 relative flex flex-col rounded-[20px] bg-clip-border shadow-3xl shadow-shadow-500 w-full !p-4 3xl:p-![18px] bg-body bg-opacity-80 backdrop-blur hover:bg-white ease-in-out transition duration-300">
  <div class="h-full w-full">
    <div class="relative w-full">
      {
        image && (
            <Image
              class="mb-3 h-full w-full rounded-xl 3xl:h-full 3xl:w-full hover:shadow-lg ease-in-out transition duration-300"
              src={image}
              alt={title}
              width={860}
              height={380}
            />
        )
      }

      <a href={`https://${domain}`} target="_blank"
         class="absolute top-3 right-3 flex items-center justify-center rounded-full bg-white text-brand-500">
        <div class="flex h-full w-full items-center justify-center rounded-full text-xl hover:bg-gray-100 p-3 shadow-sm">

          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none"
               stroke="#160873" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
               class="feather feather-external-link">
            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
            <polyline points="15 3 21 3 21 9"></polyline>
            <line x1="10" y1="14" x2="21" y2="3"></line>
          </svg>
        </div>
      </a>
    </div>
    <div class="flex items-center justify-between px-1 md:items-start">
      <div class="">
        <p class="font-bold text-navy-700 truncate max-w-[250px]">
            {title}
        </p>
        <p class="text-sm font-medium text-gray-600">
          <a
            class=""
            href={`https://${domain}`}
            target="_blank"
          >
            {domain}
          </a>
        </p>
      </div>
      <div class="flex flex-row-reverse md:mt-2 lg:mt-0">

        <span
          class="z-0 ml-px inline-flex h-8 w-8 items-center justify-center rounded-full border-2 border-white bg-theme-light text-xs text-navy-700 ">A+</span>

        {
          tags.map((category: string, index: number) => (
            <span class="z-10 -mr-3 h-8 w-8 rounded-full border-2 border-white bg-slate-100 p-1">
              <img class="h-full w-full" title={humanize(category)} src={`/icons/${slugify(category)}.svg`} alt="">
            </span>
          ))
        }
      </div>
    </div>
    <div class="flex items-center justify-between md:items-center lg:justify-between ">
      <div class="flex">

      </div>
    </div>
  </div>
</div>

      </article>
    </div>
  </div>
</section>


<section class="section pt-7">
  <div class="container">
    <div class="row justify-center">
      <article class="lg:col-10">
        {
          image && (
            <div class="mb-10">
              <Image
                src={image}
                height={500}
                width={1200}
                alt={title}
                class="w-full rounded"
              />
            </div>
          )
        }
        <h1 set:html={markdownify(title)} class="h2 mb-4" />
        <ul class="mb-4">
          <!--
          <li class="mr-4 inline-block">
            <a href={`/authors/${slugify(author)}`}>
              <FaRegUserCircle className={"mr-2 -mt-1 inline-block"} />
              {humanize(author)}
            </a>
          </li>
          -->
          <li class="mr-4 inline-block">

            <FaRegFolder className={"mr-2 -mt-1 inline-block"} />
            {
              categories.map((category: string, index: number) => (
                <a href={`/${lang}/categories/${slugify(category)}`}>
                  {humanize(category)}
                  {index !== categories.length - 1 && ","}
                </a>
              ))
            }
          </li>
          <li class="mr-4 inline-block">
            <FaRegClock className={"mr-2 -mt-1 inline-block"} />
            {dateFormat(date)}
          </li>
        </ul>
        <div class="content mb-10">
          <Content />
          <a href={`https://${domain}`} target="_blank" class="btn btn-outline-primary lowercase">{domain}</a>
        </div>
        <div class="row items-start justify-between">
          <div class="mb-10 flex items-center lg:col-7 lg:mb-0">
            <h5 class="mr-3">Stack:</h5>
            <ul>
              {
                tags.map((tag: string) => (
                  <li class="inline-block">
                    <a
                      class="m-1 block rounded bg-theme-light px-3 py-1 hover:bg-primary hover:text-white dark:bg-darkmode-theme-light dark:hover:bg-darkmode-primary dark:hover:text-dark"
                      href={`/${lang}/tags/${slugify(tag)}`}
                    >
                      {humanize(tag)}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="flex items-center lg:col-4">
            <h5 class="mr-3">Share :</h5>
            <Share
              className="social-icons"
              title={title}
              description={description}
              slug={post.slug}
            />
          </div>
        </div>
      </article>
    </div>

    <!-- Related posts -->
    <div class="section pb-0">
      <h2 class="h3 mb-12 text-center">{textRelated[lang]}</h2>
      <div class="row justify-center">
        {
          similarPosts.slice(0, 3).map((post) => (
            <div class="lg:col-4">
              <BlogCard data={post} />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>
