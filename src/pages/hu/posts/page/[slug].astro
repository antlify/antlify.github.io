---
import BlogCard from "@/components/BlogCard.astro";
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getAllTaxonomy, getTaxonomy } from "@/lib/taxonomyParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import PageHeader from "@/partials/PageHeader.astro";
import PostSidebar from "@/partials/PostSidebar.astro";
import { getLangFromUrl, useTranslations } from '../../../../i18n/utils';
import { getEntryBySlug, getCollection } from "astro:content";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { blog_folder } = config.settings;
const { slug } = Astro.params;
const pages = await getCollection('posts', entry => entry.slug.startsWith(lang));
const allCategories = await getAllTaxonomy(blog_folder, "categories");
const categories = await getTaxonomy(blog_folder, "categories");
const tags = await getTaxonomy(blog_folder, "tags");
const sortedPosts = sortByDate(pages);
const totalPages = Math.ceil(pages.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);
export async function getStaticPaths() {
  const posts = await getSinglePage(config.settings.blog_folder);
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}
---

<Base
  title={t('posts.title')}
  meta_title={t('posts.title')}
  image=""
  description=""
>
  <PageHeader title={t('posts.title')} meta_title={t('posts.title')}/>
  <section class="section">
    <div class="container">
      <div class="row gx-5">
        <!-- blog -->
        <div class="lg:col-8">
          <div class="row">
            {
              currentPosts.map((post) => {
                return(
                  <div class="mb-14 md:col-6">
                    <BlogCard data={post} />
                  </div>
                )
                })
            }
          </div>
          <Pagination
            section={lang + "/" + blog_folder}
            currentPage={currentPage}
            totalPages={totalPages}
          />
        </div>

        <!-- sidebar -->
        <PostSidebar
          categories={categories}
          tags={tags}
          allCategories={allCategories}
        />
      </div>
    </div>
  </section>
</Base>
