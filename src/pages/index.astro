---
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Testimonial from "@/partials/Testimonial.astro";
import Stack from "@/partials/Stack.astro";
import { Image } from "@astrojs/image/components";
import { getEntryBySlug } from "astro:content";
import { FaCheck } from "react-icons/fa/index.js";
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import { languages } from "../../i18n/ui";

const lang = 'hu';
const t = useTranslations(lang);

const homepage = await getEntryBySlug("homepage", lang + "/front");
const testimonial = await getEntryBySlug("sections", lang + "/testimonial");
const call_to_action = await getEntryBySlug("sections", lang + "/call-to-action");

const { banner, features } = homepage.data;
---

<Base>
<section class="relative overflow-hidden bg-gradient-to-b from-blue-50 dark:from-primary via-transparent to-transparent pb-12 pt-20 sm:pb-16 sm:pt-28 lg:pb-24 xl:pb-32 xl:pt-30">
  <div class="relative z-10">
    <div
      class="absolute inset-x-0 top-1/2 -z-10 flex -translate-y-1/2 justify-center overflow-hidden [mask-image:radial-gradient(60%_45%_at_50%_55%,white,transparent)]">
      <svg class="h-[55rem] w-[100rem] flex-none stroke-blue-600 opacity-20" aria-hidden="true">
        <defs>
          <pattern id="e9033f3e-f665-41a6-84ef-756f6778e6fe" width="200" height="200" x="50%" y="50%"
                   patternUnits="userSpaceOnUse" patternTransform="translate(-100 0)">
            <path d="M.5 200V.5H200" fill="none"></path>
          </pattern>
        </defs>
        <svg x="50%" y="50%" class="overflow-visible fill-blue-50">
          <path d="M-300 0h201v201h-201Z M300 200h201v201h-201Z" stroke-width="0"></path>
        </svg>
        <rect width="100%" height="100%" stroke-width="0" fill="url(#e9033f3e-f665-41a6-84ef-756f6778e6fe)">
        </rect>
      </svg>
    </div>
  </div>
  <div class="relative z-20 mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-4xl text-center">

      <h1 set:html={markdownify(banner.title)} class="mb-4 md:text-5xl lg:text-7xl bg-gradient-to-br from-slate-900 via-primary to-blue-900 bg-clip-text text-transparent" />

      <p set:html={markdownify(banner.content)} class="mt-6 text-lg leading-8 text-gray-600 ms-4" />

      <div class="mt-10 flex items-center justify-center gap-x-6">
        {
          banner.button.enable && (
            <a class="inline-flex items-center justify-center w-full px-5 py-3 font-medium text-center border border-gray-200 rounded-lg sm:w-auto hover:bg-gray-100 focus:ring-4 focus:ring-blue-300 focus:border-blue-300 dark:text-white dark:border-gray-700 dark:hover:bg-gray-700 dark:focus:ring-gray-800" href={banner.button.link}>
              {banner.button.label}
            </a>
          )
        }
      </div>
    </div>
  </div>
  <div class="container my-16 z-10">
    <Stack />
  </div>

  <div class="hidden sm:mb-8 sm:flex sm:justify-center">
    <div class="relative rounded-full px-3 py-1 text-sm leading-6 text-gray-600 ring-1 ring-gray-900/10 hover:ring-gray-900/20">
      Announcing our next round of funding. <a href="#" class="font-semibold text-primary"><span class="absolute inset-0" aria-hidden="true"></span>Read more <span aria-hidden="true">â†’</span></a>
    </div>
  </div>

</section>

<div class="relative z-10">
  <div
    class="absolute inset-x-0 top-1/2 -z-10 flex translate-y-1/4 justify-center overflow-hidden [mask-image:radial-gradient(50%_45%_at_50%_55%,white,transparent)]">
    <svg class="h-[55rem] w-[100rem] flex-none stroke-blue-600 opacity-20" aria-hidden="true">
      <defs>
        <pattern id="e9033f3e-f665-41a6-84ef-756f6778e6fe" width="200" height="200" x="50%" y="50%"
                 patternUnits="userSpaceOnUse" patternTransform="translate(-100 0)">
          <path d="M.5 200V.5H200" fill="none"></path>
        </pattern>
      </defs>
      <svg x="50%" y="50%" class="overflow-visible fill-blue-50">
        <path d="M-300 0h201v201h-201Z M300 200h201v201h-201Z" stroke-width="0"></path>
      </svg>
      <rect width="100%" height="100%" stroke-width="0" fill="url(#e9033f3e-f665-41a6-84ef-756f6778e6fe)">
      </rect>
    </svg>
  </div>
</div>


  <!-- Features -->
  {
    features.map(
      (
        feature: {
          button: any;
          image: string;
          bulletpoints: any;
          content: string;
          title: string;
        },
        index: number
      ) => (
        <section class={`section-sm ${index % 2 === 0 && "bg-gradient"}`}>
          <div class="container">
            <div class="row items-center justify-between">
              <div
                class={`mb:md-0 mb-6 md:col-5 relative ${
                  index % 2 !== 0 && "md:order-2"
                }`}
              >
                <div class="bg-primary h-[220px] md:h-[360px] mx-8 rounded-2xl aether-zoom relative"></div>
                <img
                  src={feature.image}
                  height={480}
                  width={520}
                  fit="contain"
                  alt={feature.title}
                  class="absolute top-0.5 left-0 -mt-10 hover:-mt-12 duration-500 max-w-full px-2"
                />
              </div>
              <div
                class={`md:col-7 lg:col-6 ${index % 2 !== 0 && "md:order-1"}`}
              >
                <h2 set:html={markdownify(feature.title)} class="mb-4" />
                <p
                  set:html={markdownify(feature.content)}
                  class="mb-8 text-lg"
                />
                <ul>
                  {feature.bulletpoints.map((bullet: string) => (
                    <li class="relative mb-4 pl-6">
                      <FaCheck className={"absolute left-0 top-1.5"} />
                      <span set:html={markdownify(bullet)} />
                    </li>
                  ))}
                </ul>
                {feature.button.enable && (
                  <a class="btn btn-outline mt-5" href={feature.button.link}>
                    {feature.button.label}
                  </a>
                )}
              </div>
            </div>
          </div>
        </section>
      )
    )
  }
  <!-- /Features -->

  <Testimonial testimonial={testimonial} />
  <CallToAction call_to_action={call_to_action} />
</Base>
